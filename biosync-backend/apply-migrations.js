const { createClient } = require('@supabase/supabase-js');
const fs = require('fs');
const path = require('path');
require('dotenv').config();

const supabase = createClient(
  process.env.SUPABASE_URL,
  process.env.SUPABASE_SERVICE_KEY || process.env.SUPABASE_ANON_KEY
);

async function applyMigration(filename) {
  console.log(`\nüìÑ Aplicando migration: ${filename}`);

  const sql = fs.readFileSync(path.join(__dirname, 'migrations', filename), 'utf8');

  try {
    // Supabase n√£o tem m√©todo direto para SQL raw, ent√£o vamos usar via API REST
    const { error } = await supabase.rpc('exec_sql', { sql_query: sql });

    if (error) {
      console.error(`‚ùå Erro ao aplicar ${filename}:`, error.message);
      console.log('\n‚ö†Ô∏è  Voc√™ precisa aplicar esta migration manualmente no Supabase SQL Editor:');
      console.log(`   https://supabase.com/dashboard/project/${process.env.SUPABASE_URL.split('.')[0].split('//')[1]}/sql`);
      return false;
    }

    console.log(`‚úÖ Migration ${filename} aplicada com sucesso!`);
    return true;
  } catch (error) {
    console.error(`‚ùå Erro:`, error.message);
    return false;
  }
}

async function main() {
  console.log('üöÄ Iniciando aplica√ß√£o de migrations...\n');

  const migrationFile = '003_create_subscription_tables.sql';

  if (!fs.existsSync(path.join(__dirname, 'migrations', migrationFile))) {
    console.error(`‚ùå Arquivo ${migrationFile} n√£o encontrado!`);
    process.exit(1);
  }

  const success = await applyMigration(migrationFile);

  if (!success) {
    console.log('\n‚ö†Ô∏è  A√á√ÉO NECESS√ÅRIA:');
    console.log('1. Acesse: https://supabase.com/dashboard');
    console.log('2. V√° em: SQL Editor');
    console.log('3. Cole o conte√∫do de: migrations/003_create_subscription_tables.sql');
    console.log('4. Execute o SQL');
  }

  console.log('\n‚úÖ Processo finalizado!');
}

main();
